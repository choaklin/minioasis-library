/*
 * This file is generated by jOOQ.
*/
package org.minioasis.library.jooq.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.minioasis.library.jooq.tables.AttachmentCheckout;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttachmentCheckoutRecord extends UpdatableRecordImpl<AttachmentCheckoutRecord> implements Record7<Long, Date, Date, String, Long, Long, Long> {

    private static final long serialVersionUID = 1425239188;

    /**
     * Setter for <code>PUBLIC.ATTACHMENT_CHECKOUT.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.ATTACHMENT_CHECKOUT.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.ATTACHMENT_CHECKOUT.CHECKOUT_DATE</code>.
     */
    public void setCheckoutDate(Date value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.ATTACHMENT_CHECKOUT.CHECKOUT_DATE</code>.
     */
    public Date getCheckoutDate() {
        return (Date) get(1);
    }

    /**
     * Setter for <code>PUBLIC.ATTACHMENT_CHECKOUT.COMPLETED</code>.
     */
    public void setCompleted(Date value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.ATTACHMENT_CHECKOUT.COMPLETED</code>.
     */
    public Date getCompleted() {
        return (Date) get(2);
    }

    /**
     * Setter for <code>PUBLIC.ATTACHMENT_CHECKOUT.STATE</code>.
     */
    public void setState(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.ATTACHMENT_CHECKOUT.STATE</code>.
     */
    public String getState() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PUBLIC.ATTACHMENT_CHECKOUT.ATTACHMENT_ID</code>.
     */
    public void setAttachmentId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.ATTACHMENT_CHECKOUT.ATTACHMENT_ID</code>.
     */
    public Long getAttachmentId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>PUBLIC.ATTACHMENT_CHECKOUT.CHECKOUT_ID</code>.
     */
    public void setCheckoutId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.ATTACHMENT_CHECKOUT.CHECKOUT_ID</code>.
     */
    public Long getCheckoutId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>PUBLIC.ATTACHMENT_CHECKOUT.PATRON_ID</code>.
     */
    public void setPatronId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>PUBLIC.ATTACHMENT_CHECKOUT.PATRON_ID</code>.
     */
    public Long getPatronId() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, Date, Date, String, Long, Long, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, Date, Date, String, Long, Long, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return AttachmentCheckout.ATTACHMENT_CHECKOUT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field2() {
        return AttachmentCheckout.ATTACHMENT_CHECKOUT.CHECKOUT_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field3() {
        return AttachmentCheckout.ATTACHMENT_CHECKOUT.COMPLETED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return AttachmentCheckout.ATTACHMENT_CHECKOUT.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return AttachmentCheckout.ATTACHMENT_CHECKOUT.ATTACHMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return AttachmentCheckout.ATTACHMENT_CHECKOUT.CHECKOUT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return AttachmentCheckout.ATTACHMENT_CHECKOUT.PATRON_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component2() {
        return getCheckoutDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component3() {
        return getCompleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component5() {
        return getAttachmentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component6() {
        return getCheckoutId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component7() {
        return getPatronId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value2() {
        return getCheckoutDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value3() {
        return getCompleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getAttachmentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getCheckoutId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getPatronId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttachmentCheckoutRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttachmentCheckoutRecord value2(Date value) {
        setCheckoutDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttachmentCheckoutRecord value3(Date value) {
        setCompleted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttachmentCheckoutRecord value4(String value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttachmentCheckoutRecord value5(Long value) {
        setAttachmentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttachmentCheckoutRecord value6(Long value) {
        setCheckoutId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttachmentCheckoutRecord value7(Long value) {
        setPatronId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttachmentCheckoutRecord values(Long value1, Date value2, Date value3, String value4, Long value5, Long value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AttachmentCheckoutRecord
     */
    public AttachmentCheckoutRecord() {
        super(AttachmentCheckout.ATTACHMENT_CHECKOUT);
    }

    /**
     * Create a detached, initialised AttachmentCheckoutRecord
     */
    public AttachmentCheckoutRecord(Long id, Date checkoutDate, Date completed, String state, Long attachmentId, Long checkoutId, Long patronId) {
        super(AttachmentCheckout.ATTACHMENT_CHECKOUT);

        set(0, id);
        set(1, checkoutDate);
        set(2, completed);
        set(3, state);
        set(4, attachmentId);
        set(5, checkoutId);
        set(6, patronId);
    }
}
