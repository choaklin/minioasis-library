/*
 * This file is generated by jOOQ.
*/
package org.minioasis.library.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.minioasis.library.jooq.Indexes;
import org.minioasis.library.jooq.Keys;
import org.minioasis.library.jooq.Public;
import org.minioasis.library.jooq.tables.records.JournalEntryLineRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JournalEntryLine extends TableImpl<JournalEntryLineRecord> {

    private static final long serialVersionUID = 1381545627;

    /**
     * The reference instance of <code>PUBLIC.JOURNAL_ENTRY_LINE</code>
     */
    public static final JournalEntryLine JOURNAL_ENTRY_LINE = new JournalEntryLine();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JournalEntryLineRecord> getRecordType() {
        return JournalEntryLineRecord.class;
    }

    /**
     * The column <code>PUBLIC.JOURNAL_ENTRY_LINE.ID</code>.
     */
    public final TableField<JournalEntryLineRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * Create a <code>PUBLIC.JOURNAL_ENTRY_LINE</code> table reference
     */
    public JournalEntryLine() {
        this(DSL.name("JOURNAL_ENTRY_LINE"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.JOURNAL_ENTRY_LINE</code> table reference
     */
    public JournalEntryLine(String alias) {
        this(DSL.name(alias), JOURNAL_ENTRY_LINE);
    }

    /**
     * Create an aliased <code>PUBLIC.JOURNAL_ENTRY_LINE</code> table reference
     */
    public JournalEntryLine(Name alias) {
        this(alias, JOURNAL_ENTRY_LINE);
    }

    private JournalEntryLine(Name alias, Table<JournalEntryLineRecord> aliased) {
        this(alias, aliased, null);
    }

    private JournalEntryLine(Name alias, Table<JournalEntryLineRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_F);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<JournalEntryLineRecord, Long> getIdentity() {
        return Keys.IDENTITY_JOURNAL_ENTRY_LINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JournalEntryLineRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_F;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JournalEntryLineRecord>> getKeys() {
        return Arrays.<UniqueKey<JournalEntryLineRecord>>asList(Keys.CONSTRAINT_F);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JournalEntryLine as(String alias) {
        return new JournalEntryLine(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JournalEntryLine as(Name alias) {
        return new JournalEntryLine(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JournalEntryLine rename(String name) {
        return new JournalEntryLine(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JournalEntryLine rename(Name name) {
        return new JournalEntryLine(name, null);
    }
}
