/*
 * This file is generated by jOOQ.
*/
package org.minioasis.library.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.minioasis.library.jooq.tables.Photo;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PhotoRecord extends UpdatableRecordImpl<PhotoRecord> implements Record6<Long, String, byte[], String, String, Integer> {

    private static final long serialVersionUID = -252116993;

    /**
     * Setter for <code>PUBLIC.PHOTO.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.PHOTO.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.PHOTO.DESCRIPTION</code>.
     */
    public void setDescription(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.PHOTO.DESCRIPTION</code>.
     */
    public String getDescription() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.PHOTO.IMG</code>.
     */
    public void setImg(byte... value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.PHOTO.IMG</code>.
     */
    public byte[] getImg() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>PUBLIC.PHOTO.LINK</code>.
     */
    public void setLink(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.PHOTO.LINK</code>.
     */
    public String getLink() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PUBLIC.PHOTO.NAME</code>.
     */
    public void setName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.PHOTO.NAME</code>.
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>PUBLIC.PHOTO.SIZE</code>.
     */
    public void setSize(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.PHOTO.SIZE</code>.
     */
    public Integer getSize() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, byte[], String, String, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, byte[], String, String, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Photo.PHOTO.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Photo.PHOTO.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field3() {
        return Photo.PHOTO.IMG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Photo.PHOTO.LINK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Photo.PHOTO.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Photo.PHOTO.SIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component3() {
        return getImg();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getLink();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value3() {
        return getImg();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getLink();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PhotoRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PhotoRecord value2(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PhotoRecord value3(byte... value) {
        setImg(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PhotoRecord value4(String value) {
        setLink(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PhotoRecord value5(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PhotoRecord value6(Integer value) {
        setSize(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PhotoRecord values(Long value1, String value2, byte[] value3, String value4, String value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PhotoRecord
     */
    public PhotoRecord() {
        super(Photo.PHOTO);
    }

    /**
     * Create a detached, initialised PhotoRecord
     */
    public PhotoRecord(Long id, String description, byte[] img, String link, String name, Integer size) {
        super(Photo.PHOTO);

        set(0, id);
        set(1, description);
        set(2, img);
        set(3, link);
        set(4, name);
        set(5, size);
    }
}
