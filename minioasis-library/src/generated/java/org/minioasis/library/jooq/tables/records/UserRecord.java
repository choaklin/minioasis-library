/*
 * This file is generated by jOOQ.
 */
package org.minioasis.library.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.minioasis.library.jooq.tables.User;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record5<Long, Boolean, Timestamp, String, String> {

    private static final long serialVersionUID = 1761804161;

    /**
     * Setter for <code>USER.USER_ID</code>.
     */
    public UserRecord setUserId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>USER.USER_ID</code>.
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>USER.ENABLED</code>.
     */
    public UserRecord setEnabled(Boolean value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>USER.ENABLED</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>USER.LAST_LOGIN</code>.
     */
    public UserRecord setLastLogin(Timestamp value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>USER.LAST_LOGIN</code>.
     */
    public Timestamp getLastLogin() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>USER.PASSWORD</code>.
     */
    public UserRecord setPassword(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>USER.PASSWORD</code>.
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>USER.USERNAME</code>.
     */
    public UserRecord setUsername(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>USER.USERNAME</code>.
     */
    public String getUsername() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Boolean, Timestamp, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Boolean, Timestamp, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return User.USER.USER_ID;
    }

    @Override
    public Field<Boolean> field2() {
        return User.USER.ENABLED;
    }

    @Override
    public Field<Timestamp> field3() {
        return User.USER.LAST_LOGIN;
    }

    @Override
    public Field<String> field4() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<String> field5() {
        return User.USER.USERNAME;
    }

    @Override
    public Long component1() {
        return getUserId();
    }

    @Override
    public Boolean component2() {
        return getEnabled();
    }

    @Override
    public Timestamp component3() {
        return getLastLogin();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public String component5() {
        return getUsername();
    }

    @Override
    public Long value1() {
        return getUserId();
    }

    @Override
    public Boolean value2() {
        return getEnabled();
    }

    @Override
    public Timestamp value3() {
        return getLastLogin();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public String value5() {
        return getUsername();
    }

    @Override
    public UserRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserRecord value2(Boolean value) {
        setEnabled(value);
        return this;
    }

    @Override
    public UserRecord value3(Timestamp value) {
        setLastLogin(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UserRecord values(Long value1, Boolean value2, Timestamp value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Long userId, Boolean enabled, Timestamp lastLogin, String password, String username) {
        super(User.USER);

        set(0, userId);
        set(1, enabled);
        set(2, lastLogin);
        set(3, password);
        set(4, username);
    }
}
