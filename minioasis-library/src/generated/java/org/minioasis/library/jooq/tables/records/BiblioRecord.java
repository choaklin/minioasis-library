/*
 * This file is generated by jOOQ.
 */
package org.minioasis.library.jooq.tables.records;


import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.minioasis.library.jooq.tables.Biblio;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BiblioRecord extends UpdatableRecordImpl<BiblioRecord> {

    private static final long serialVersionUID = 1908455915;

    /**
     * Setter for <code>BIBLIO.ID</code>.
     */
    public BiblioRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>BIBLIO.ACTIVE</code>.
     */
    public BiblioRecord setActive(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.ACTIVE</code>.
     */
    public String getActive() {
        return (String) get(1);
    }

    /**
     * Setter for <code>BIBLIO.AUTHOR</code>.
     */
    public BiblioRecord setAuthor(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.AUTHOR</code>.
     */
    public String getAuthor() {
        return (String) get(2);
    }

    /**
     * Setter for <code>BIBLIO.BIBLIO_TYPE</code>.
     */
    public BiblioRecord setBiblioType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.BIBLIO_TYPE</code>.
     */
    public String getBiblioType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>BIBLIO.BINDING</code>.
     */
    public BiblioRecord setBinding(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.BINDING</code>.
     */
    public String getBinding() {
        return (String) get(4);
    }

    /**
     * Setter for <code>BIBLIO.CLASS_MARK</code>.
     */
    public BiblioRecord setClassMark(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.CLASS_MARK</code>.
     */
    public String getClassMark() {
        return (String) get(5);
    }

    /**
     * Setter for <code>BIBLIO.DESCRIPTION</code>.
     */
    public BiblioRecord setDescription(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.DESCRIPTION</code>.
     */
    public String getDescription() {
        return (String) get(6);
    }

    /**
     * Setter for <code>BIBLIO.EDITION</code>.
     */
    public BiblioRecord setEdition(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.EDITION</code>.
     */
    public String getEdition() {
        return (String) get(7);
    }

    /**
     * Setter for <code>BIBLIO.IMAGE_ID</code>.
     */
    public BiblioRecord setImageId(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.IMAGE_ID</code>.
     */
    public String getImageId() {
        return (String) get(8);
    }

    /**
     * Setter for <code>BIBLIO.ISBN</code>.
     */
    public BiblioRecord setIsbn(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.ISBN</code>.
     */
    public String getIsbn() {
        return (String) get(9);
    }

    /**
     * Setter for <code>BIBLIO.CODEN</code>.
     */
    public BiblioRecord setCoden(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.CODEN</code>.
     */
    public String getCoden() {
        return (String) get(10);
    }

    /**
     * Setter for <code>BIBLIO.ISSN</code>.
     */
    public BiblioRecord setIssn(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.ISSN</code>.
     */
    public String getIssn() {
        return (String) get(11);
    }

    /**
     * Setter for <code>BIBLIO.PUBLISHING_DATE</code>.
     */
    public BiblioRecord setPublishingDate(Date value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.PUBLISHING_DATE</code>.
     */
    public Date getPublishingDate() {
        return (Date) get(12);
    }

    /**
     * Setter for <code>BIBLIO.VOLUME_NO</code>.
     */
    public BiblioRecord setVolumeNo(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.VOLUME_NO</code>.
     */
    public String getVolumeNo() {
        return (String) get(13);
    }

    /**
     * Setter for <code>BIBLIO.LANGUAGE</code>.
     */
    public BiblioRecord setLanguage(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.LANGUAGE</code>.
     */
    public String getLanguage() {
        return (String) get(14);
    }

    /**
     * Setter for <code>BIBLIO.NOTE</code>.
     */
    public BiblioRecord setNote(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.NOTE</code>.
     */
    public String getNote() {
        return (String) get(15);
    }

    /**
     * Setter for <code>BIBLIO.PAGES</code>.
     */
    public BiblioRecord setPages(Integer value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.PAGES</code>.
     */
    public Integer getPages() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>BIBLIO.PUBLICATION_PLACE</code>.
     */
    public BiblioRecord setPublicationPlace(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.PUBLICATION_PLACE</code>.
     */
    public String getPublicationPlace() {
        return (String) get(17);
    }

    /**
     * Setter for <code>BIBLIO.PUBLISHING_YEAR</code>.
     */
    public BiblioRecord setPublishingYear(Integer value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.PUBLISHING_YEAR</code>.
     */
    public Integer getPublishingYear() {
        return (Integer) get(18);
    }

    /**
     * Setter for <code>BIBLIO.TOPIC</code>.
     */
    public BiblioRecord setTopic(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.TOPIC</code>.
     */
    public String getTopic() {
        return (String) get(19);
    }

    /**
     * Setter for <code>BIBLIO.TITLE</code>.
     */
    public BiblioRecord setTitle(String value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.TITLE</code>.
     */
    public String getTitle() {
        return (String) get(20);
    }

    /**
     * Setter for <code>BIBLIO.UPDATED</code>.
     */
    public BiblioRecord setUpdated(Timestamp value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.UPDATED</code>.
     */
    public Timestamp getUpdated() {
        return (Timestamp) get(21);
    }

    /**
     * Setter for <code>BIBLIO.PUBLISHER_ID</code>.
     */
    public BiblioRecord setPublisherId(Long value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.PUBLISHER_ID</code>.
     */
    public Long getPublisherId() {
        return (Long) get(22);
    }

    /**
     * Setter for <code>BIBLIO.SERIES_ID</code>.
     */
    public BiblioRecord setSeriesId(Long value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>BIBLIO.SERIES_ID</code>.
     */
    public Long getSeriesId() {
        return (Long) get(23);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BiblioRecord
     */
    public BiblioRecord() {
        super(Biblio.BIBLIO);
    }

    /**
     * Create a detached, initialised BiblioRecord
     */
    public BiblioRecord(Long id, String active, String author, String biblioType, String binding, String classMark, String description, String edition, String imageId, String isbn, String coden, String issn, Date publishingDate, String volumeNo, String language, String note, Integer pages, String publicationPlace, Integer publishingYear, String topic, String title, Timestamp updated, Long publisherId, Long seriesId) {
        super(Biblio.BIBLIO);

        set(0, id);
        set(1, active);
        set(2, author);
        set(3, biblioType);
        set(4, binding);
        set(5, classMark);
        set(6, description);
        set(7, edition);
        set(8, imageId);
        set(9, isbn);
        set(10, coden);
        set(11, issn);
        set(12, publishingDate);
        set(13, volumeNo);
        set(14, language);
        set(15, note);
        set(16, pages);
        set(17, publicationPlace);
        set(18, publishingYear);
        set(19, topic);
        set(20, title);
        set(21, updated);
        set(22, publisherId);
        set(23, seriesId);
    }
}
