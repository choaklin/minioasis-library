/*
 * This file is generated by jOOQ.
*/
package org.minioasis.library.jooq.tables.daos;


import java.sql.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.minioasis.library.jooq.tables.AttachmentCheckout;
import org.minioasis.library.jooq.tables.records.AttachmentCheckoutRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttachmentCheckoutDao extends DAOImpl<AttachmentCheckoutRecord, org.minioasis.library.jooq.tables.pojos.AttachmentCheckout, Long> {

    /**
     * Create a new AttachmentCheckoutDao without any configuration
     */
    public AttachmentCheckoutDao() {
        super(AttachmentCheckout.ATTACHMENT_CHECKOUT, org.minioasis.library.jooq.tables.pojos.AttachmentCheckout.class);
    }

    /**
     * Create a new AttachmentCheckoutDao with an attached configuration
     */
    public AttachmentCheckoutDao(Configuration configuration) {
        super(AttachmentCheckout.ATTACHMENT_CHECKOUT, org.minioasis.library.jooq.tables.pojos.AttachmentCheckout.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(org.minioasis.library.jooq.tables.pojos.AttachmentCheckout object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<org.minioasis.library.jooq.tables.pojos.AttachmentCheckout> fetchById(Long... values) {
        return fetch(AttachmentCheckout.ATTACHMENT_CHECKOUT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public org.minioasis.library.jooq.tables.pojos.AttachmentCheckout fetchOneById(Long value) {
        return fetchOne(AttachmentCheckout.ATTACHMENT_CHECKOUT.ID, value);
    }

    /**
     * Fetch records that have <code>CHECKOUT_DATE IN (values)</code>
     */
    public List<org.minioasis.library.jooq.tables.pojos.AttachmentCheckout> fetchByCheckoutDate(Date... values) {
        return fetch(AttachmentCheckout.ATTACHMENT_CHECKOUT.CHECKOUT_DATE, values);
    }

    /**
     * Fetch records that have <code>COMPLETED IN (values)</code>
     */
    public List<org.minioasis.library.jooq.tables.pojos.AttachmentCheckout> fetchByCompleted(Date... values) {
        return fetch(AttachmentCheckout.ATTACHMENT_CHECKOUT.COMPLETED, values);
    }

    /**
     * Fetch records that have <code>STATE IN (values)</code>
     */
    public List<org.minioasis.library.jooq.tables.pojos.AttachmentCheckout> fetchByState(String... values) {
        return fetch(AttachmentCheckout.ATTACHMENT_CHECKOUT.STATE, values);
    }

    /**
     * Fetch records that have <code>ATTACHMENT_ID IN (values)</code>
     */
    public List<org.minioasis.library.jooq.tables.pojos.AttachmentCheckout> fetchByAttachmentId(Long... values) {
        return fetch(AttachmentCheckout.ATTACHMENT_CHECKOUT.ATTACHMENT_ID, values);
    }

    /**
     * Fetch records that have <code>CHECKOUT_ID IN (values)</code>
     */
    public List<org.minioasis.library.jooq.tables.pojos.AttachmentCheckout> fetchByCheckoutId(Long... values) {
        return fetch(AttachmentCheckout.ATTACHMENT_CHECKOUT.CHECKOUT_ID, values);
    }

    /**
     * Fetch records that have <code>PATRON_ID IN (values)</code>
     */
    public List<org.minioasis.library.jooq.tables.pojos.AttachmentCheckout> fetchByPatronId(Long... values) {
        return fetch(AttachmentCheckout.ATTACHMENT_CHECKOUT.PATRON_ID, values);
    }
}
