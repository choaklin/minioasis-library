/*
 * This file is generated by jOOQ.
*/
package org.minioasis.library.jooq.tables.records;


import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;
import org.minioasis.library.jooq.tables.Checkout;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CheckoutRecord extends UpdatableRecordImpl<CheckoutRecord> implements Record13<Long, Date, Date, Date, BigDecimal, Date, BigDecimal, Date, Byte, String, Long, Long, Long> {

    private static final long serialVersionUID = 186562128;

    /**
     * Setter for <code>PUBLIC.CHECKOUT.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.CHECKOUT.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.CHECKOUT.CHECKOUT_DATE</code>.
     */
    public void setCheckoutDate(Date value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.CHECKOUT.CHECKOUT_DATE</code>.
     */
    public Date getCheckoutDate() {
        return (Date) get(1);
    }

    /**
     * Setter for <code>PUBLIC.CHECKOUT.DONE</code>.
     */
    public void setDone(Date value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.CHECKOUT.DONE</code>.
     */
    public Date getDone() {
        return (Date) get(2);
    }

    /**
     * Setter for <code>PUBLIC.CHECKOUT.DUE_DATE</code>.
     */
    public void setDueDate(Date value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.CHECKOUT.DUE_DATE</code>.
     */
    public Date getDueDate() {
        return (Date) get(3);
    }

    /**
     * Setter for <code>PUBLIC.CHECKOUT.FINE_PAID_AMOUNT</code>.
     */
    public void setFinePaidAmount(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.CHECKOUT.FINE_PAID_AMOUNT</code>.
     */
    public BigDecimal getFinePaidAmount() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>PUBLIC.CHECKOUT.FINE_PAID_DATE</code>.
     */
    public void setFinePaidDate(Date value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.CHECKOUT.FINE_PAID_DATE</code>.
     */
    public Date getFinePaidDate() {
        return (Date) get(5);
    }

    /**
     * Setter for <code>PUBLIC.CHECKOUT.LOST_AND_DAMAGE_FINE_AMOUNT</code>.
     */
    public void setLostAndDamageFineAmount(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>PUBLIC.CHECKOUT.LOST_AND_DAMAGE_FINE_AMOUNT</code>.
     */
    public BigDecimal getLostAndDamageFineAmount() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>PUBLIC.CHECKOUT.LOST_OR_DAMAGE_PAID_DATE</code>.
     */
    public void setLostOrDamagePaidDate(Date value) {
        set(7, value);
    }

    /**
     * Getter for <code>PUBLIC.CHECKOUT.LOST_OR_DAMAGE_PAID_DATE</code>.
     */
    public Date getLostOrDamagePaidDate() {
        return (Date) get(7);
    }

    /**
     * Setter for <code>PUBLIC.CHECKOUT.RENEWED_NO</code>.
     */
    public void setRenewedNo(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>PUBLIC.CHECKOUT.RENEWED_NO</code>.
     */
    public Byte getRenewedNo() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>PUBLIC.CHECKOUT.STATE</code>.
     */
    public void setState(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>PUBLIC.CHECKOUT.STATE</code>.
     */
    public String getState() {
        return (String) get(9);
    }

    /**
     * Setter for <code>PUBLIC.CHECKOUT.ITEM_ID</code>.
     */
    public void setItemId(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>PUBLIC.CHECKOUT.ITEM_ID</code>.
     */
    public Long getItemId() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>PUBLIC.CHECKOUT.PATRON_ID</code>.
     */
    public void setPatronId(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>PUBLIC.CHECKOUT.PATRON_ID</code>.
     */
    public Long getPatronId() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>PUBLIC.CHECKOUT.PATRONTYPE_ID</code>.
     */
    public void setPatrontypeId(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>PUBLIC.CHECKOUT.PATRONTYPE_ID</code>.
     */
    public Long getPatrontypeId() {
        return (Long) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, Date, Date, Date, BigDecimal, Date, BigDecimal, Date, Byte, String, Long, Long, Long> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, Date, Date, Date, BigDecimal, Date, BigDecimal, Date, Byte, String, Long, Long, Long> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Checkout.CHECKOUT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field2() {
        return Checkout.CHECKOUT.CHECKOUT_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field3() {
        return Checkout.CHECKOUT.DONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field4() {
        return Checkout.CHECKOUT.DUE_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field5() {
        return Checkout.CHECKOUT.FINE_PAID_AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field6() {
        return Checkout.CHECKOUT.FINE_PAID_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field7() {
        return Checkout.CHECKOUT.LOST_AND_DAMAGE_FINE_AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field8() {
        return Checkout.CHECKOUT.LOST_OR_DAMAGE_PAID_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field9() {
        return Checkout.CHECKOUT.RENEWED_NO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Checkout.CHECKOUT.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field11() {
        return Checkout.CHECKOUT.ITEM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field12() {
        return Checkout.CHECKOUT.PATRON_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field13() {
        return Checkout.CHECKOUT.PATRONTYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component2() {
        return getCheckoutDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component3() {
        return getDone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component4() {
        return getDueDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component5() {
        return getFinePaidAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component6() {
        return getFinePaidDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component7() {
        return getLostAndDamageFineAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component8() {
        return getLostOrDamagePaidDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component9() {
        return getRenewedNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component11() {
        return getItemId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component12() {
        return getPatronId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component13() {
        return getPatrontypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value2() {
        return getCheckoutDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value3() {
        return getDone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value4() {
        return getDueDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value5() {
        return getFinePaidAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value6() {
        return getFinePaidDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value7() {
        return getLostAndDamageFineAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value8() {
        return getLostOrDamagePaidDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value9() {
        return getRenewedNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value11() {
        return getItemId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value12() {
        return getPatronId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value13() {
        return getPatrontypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckoutRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckoutRecord value2(Date value) {
        setCheckoutDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckoutRecord value3(Date value) {
        setDone(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckoutRecord value4(Date value) {
        setDueDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckoutRecord value5(BigDecimal value) {
        setFinePaidAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckoutRecord value6(Date value) {
        setFinePaidDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckoutRecord value7(BigDecimal value) {
        setLostAndDamageFineAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckoutRecord value8(Date value) {
        setLostOrDamagePaidDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckoutRecord value9(Byte value) {
        setRenewedNo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckoutRecord value10(String value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckoutRecord value11(Long value) {
        setItemId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckoutRecord value12(Long value) {
        setPatronId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckoutRecord value13(Long value) {
        setPatrontypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckoutRecord values(Long value1, Date value2, Date value3, Date value4, BigDecimal value5, Date value6, BigDecimal value7, Date value8, Byte value9, String value10, Long value11, Long value12, Long value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CheckoutRecord
     */
    public CheckoutRecord() {
        super(Checkout.CHECKOUT);
    }

    /**
     * Create a detached, initialised CheckoutRecord
     */
    public CheckoutRecord(Long id, Date checkoutDate, Date done, Date dueDate, BigDecimal finePaidAmount, Date finePaidDate, BigDecimal lostAndDamageFineAmount, Date lostOrDamagePaidDate, Byte renewedNo, String state, Long itemId, Long patronId, Long patrontypeId) {
        super(Checkout.CHECKOUT);

        set(0, id);
        set(1, checkoutDate);
        set(2, done);
        set(3, dueDate);
        set(4, finePaidAmount);
        set(5, finePaidDate);
        set(6, lostAndDamageFineAmount);
        set(7, lostOrDamagePaidDate);
        set(8, renewedNo);
        set(9, state);
        set(10, itemId);
        set(11, patronId);
        set(12, patrontypeId);
    }
}
