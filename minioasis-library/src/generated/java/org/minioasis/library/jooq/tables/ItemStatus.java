/*
 * This file is generated by jOOQ.
 */
package org.minioasis.library.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.minioasis.library.jooq.DefaultSchema;
import org.minioasis.library.jooq.Indexes;
import org.minioasis.library.jooq.Keys;
import org.minioasis.library.jooq.tables.records.ItemStatusRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemStatus extends TableImpl<ItemStatusRecord> {

    private static final long serialVersionUID = -986326041;

    /**
     * The reference instance of <code>ITEM_STATUS</code>
     */
    public static final ItemStatus ITEM_STATUS = new ItemStatus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ItemStatusRecord> getRecordType() {
        return ItemStatusRecord.class;
    }

    /**
     * The column <code>ITEM_STATUS.ID</code>.
     */
    public final TableField<ItemStatusRecord, Long> ID = createField(DSL.name("ID"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>ITEM_STATUS.BORROWABLE</code>.
     */
    public final TableField<ItemStatusRecord, Boolean> BORROWABLE = createField(DSL.name("BORROWABLE"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>ITEM_STATUS.NAME</code>.
     */
    public final TableField<ItemStatusRecord, String> NAME = createField(DSL.name("NAME"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>ITEM_STATUS.RESERVABLE</code>.
     */
    public final TableField<ItemStatusRecord, Boolean> RESERVABLE = createField(DSL.name("RESERVABLE"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a <code>ITEM_STATUS</code> table reference
     */
    public ItemStatus() {
        this(DSL.name("ITEM_STATUS"), null);
    }

    /**
     * Create an aliased <code>ITEM_STATUS</code> table reference
     */
    public ItemStatus(String alias) {
        this(DSL.name(alias), ITEM_STATUS);
    }

    /**
     * Create an aliased <code>ITEM_STATUS</code> table reference
     */
    public ItemStatus(Name alias) {
        this(alias, ITEM_STATUS);
    }

    private ItemStatus(Name alias, Table<ItemStatusRecord> aliased) {
        this(alias, aliased, null);
    }

    private ItemStatus(Name alias, Table<ItemStatusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ItemStatus(Table<O> child, ForeignKey<O, ItemStatusRecord> key) {
        super(child, key, ITEM_STATUS);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_64, Indexes.UK_GW69EG5BWDJ2BC6GJ8GYXT9AD_INDEX_6);
    }

    @Override
    public UniqueKey<ItemStatusRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_64;
    }

    @Override
    public List<UniqueKey<ItemStatusRecord>> getKeys() {
        return Arrays.<UniqueKey<ItemStatusRecord>>asList(Keys.CONSTRAINT_64, Keys.UK_GW69EG5BWDJ2BC6GJ8GYXT9AD);
    }

    @Override
    public ItemStatus as(String alias) {
        return new ItemStatus(DSL.name(alias), this);
    }

    @Override
    public ItemStatus as(Name alias) {
        return new ItemStatus(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemStatus rename(String name) {
        return new ItemStatus(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemStatus rename(Name name) {
        return new ItemStatus(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Boolean, String, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
