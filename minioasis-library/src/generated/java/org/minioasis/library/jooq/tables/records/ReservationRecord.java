/*
 * This file is generated by jOOQ.
 */
package org.minioasis.library.jooq.tables.records;


import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;
import org.minioasis.library.jooq.tables.Reservation;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReservationRecord extends UpdatableRecordImpl<ReservationRecord> implements Record11<Long, Date, Date, Date, Date, Date, Timestamp, String, Date, Long, Long> {

    private static final long serialVersionUID = -1957913215;

    /**
     * Setter for <code>RESERVATION.ID</code>.
     */
    public ReservationRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>RESERVATION.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>RESERVATION.AVAILABLE_DATE</code>.
     */
    public ReservationRecord setAvailableDate(Date value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>RESERVATION.AVAILABLE_DATE</code>.
     */
    public Date getAvailableDate() {
        return (Date) get(1);
    }

    /**
     * Setter for <code>RESERVATION.CANCEL_DATE</code>.
     */
    public ReservationRecord setCancelDate(Date value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>RESERVATION.CANCEL_DATE</code>.
     */
    public Date getCancelDate() {
        return (Date) get(2);
    }

    /**
     * Setter for <code>RESERVATION.COLLECTED_DATE</code>.
     */
    public ReservationRecord setCollectedDate(Date value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>RESERVATION.COLLECTED_DATE</code>.
     */
    public Date getCollectedDate() {
        return (Date) get(3);
    }

    /**
     * Setter for <code>RESERVATION.EXPIRY_DATE</code>.
     */
    public ReservationRecord setExpiryDate(Date value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>RESERVATION.EXPIRY_DATE</code>.
     */
    public Date getExpiryDate() {
        return (Date) get(4);
    }

    /**
     * Setter for <code>RESERVATION.NOTIFICATION_DATE</code>.
     */
    public ReservationRecord setNotificationDate(Date value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>RESERVATION.NOTIFICATION_DATE</code>.
     */
    public Date getNotificationDate() {
        return (Date) get(5);
    }

    /**
     * Setter for <code>RESERVATION.RESERVATION_DATE</code>.
     */
    public ReservationRecord setReservationDate(Timestamp value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>RESERVATION.RESERVATION_DATE</code>.
     */
    public Timestamp getReservationDate() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>RESERVATION.STATE</code>.
     */
    public ReservationRecord setState(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>RESERVATION.STATE</code>.
     */
    public String getState() {
        return (String) get(7);
    }

    /**
     * Setter for <code>RESERVATION.UNCOLLECTED_DATE</code>.
     */
    public ReservationRecord setUncollectedDate(Date value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>RESERVATION.UNCOLLECTED_DATE</code>.
     */
    public Date getUncollectedDate() {
        return (Date) get(8);
    }

    /**
     * Setter for <code>RESERVATION.BIBLIO_ID</code>.
     */
    public ReservationRecord setBiblioId(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>RESERVATION.BIBLIO_ID</code>.
     */
    public Long getBiblioId() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>RESERVATION.PATRON_ID</code>.
     */
    public ReservationRecord setPatronId(Long value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>RESERVATION.PATRON_ID</code>.
     */
    public Long getPatronId() {
        return (Long) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Date, Date, Date, Date, Date, Timestamp, String, Date, Long, Long> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, Date, Date, Date, Date, Date, Timestamp, String, Date, Long, Long> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Reservation.RESERVATION.ID;
    }

    @Override
    public Field<Date> field2() {
        return Reservation.RESERVATION.AVAILABLE_DATE;
    }

    @Override
    public Field<Date> field3() {
        return Reservation.RESERVATION.CANCEL_DATE;
    }

    @Override
    public Field<Date> field4() {
        return Reservation.RESERVATION.COLLECTED_DATE;
    }

    @Override
    public Field<Date> field5() {
        return Reservation.RESERVATION.EXPIRY_DATE;
    }

    @Override
    public Field<Date> field6() {
        return Reservation.RESERVATION.NOTIFICATION_DATE;
    }

    @Override
    public Field<Timestamp> field7() {
        return Reservation.RESERVATION.RESERVATION_DATE;
    }

    @Override
    public Field<String> field8() {
        return Reservation.RESERVATION.STATE;
    }

    @Override
    public Field<Date> field9() {
        return Reservation.RESERVATION.UNCOLLECTED_DATE;
    }

    @Override
    public Field<Long> field10() {
        return Reservation.RESERVATION.BIBLIO_ID;
    }

    @Override
    public Field<Long> field11() {
        return Reservation.RESERVATION.PATRON_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Date component2() {
        return getAvailableDate();
    }

    @Override
    public Date component3() {
        return getCancelDate();
    }

    @Override
    public Date component4() {
        return getCollectedDate();
    }

    @Override
    public Date component5() {
        return getExpiryDate();
    }

    @Override
    public Date component6() {
        return getNotificationDate();
    }

    @Override
    public Timestamp component7() {
        return getReservationDate();
    }

    @Override
    public String component8() {
        return getState();
    }

    @Override
    public Date component9() {
        return getUncollectedDate();
    }

    @Override
    public Long component10() {
        return getBiblioId();
    }

    @Override
    public Long component11() {
        return getPatronId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Date value2() {
        return getAvailableDate();
    }

    @Override
    public Date value3() {
        return getCancelDate();
    }

    @Override
    public Date value4() {
        return getCollectedDate();
    }

    @Override
    public Date value5() {
        return getExpiryDate();
    }

    @Override
    public Date value6() {
        return getNotificationDate();
    }

    @Override
    public Timestamp value7() {
        return getReservationDate();
    }

    @Override
    public String value8() {
        return getState();
    }

    @Override
    public Date value9() {
        return getUncollectedDate();
    }

    @Override
    public Long value10() {
        return getBiblioId();
    }

    @Override
    public Long value11() {
        return getPatronId();
    }

    @Override
    public ReservationRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ReservationRecord value2(Date value) {
        setAvailableDate(value);
        return this;
    }

    @Override
    public ReservationRecord value3(Date value) {
        setCancelDate(value);
        return this;
    }

    @Override
    public ReservationRecord value4(Date value) {
        setCollectedDate(value);
        return this;
    }

    @Override
    public ReservationRecord value5(Date value) {
        setExpiryDate(value);
        return this;
    }

    @Override
    public ReservationRecord value6(Date value) {
        setNotificationDate(value);
        return this;
    }

    @Override
    public ReservationRecord value7(Timestamp value) {
        setReservationDate(value);
        return this;
    }

    @Override
    public ReservationRecord value8(String value) {
        setState(value);
        return this;
    }

    @Override
    public ReservationRecord value9(Date value) {
        setUncollectedDate(value);
        return this;
    }

    @Override
    public ReservationRecord value10(Long value) {
        setBiblioId(value);
        return this;
    }

    @Override
    public ReservationRecord value11(Long value) {
        setPatronId(value);
        return this;
    }

    @Override
    public ReservationRecord values(Long value1, Date value2, Date value3, Date value4, Date value5, Date value6, Timestamp value7, String value8, Date value9, Long value10, Long value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReservationRecord
     */
    public ReservationRecord() {
        super(Reservation.RESERVATION);
    }

    /**
     * Create a detached, initialised ReservationRecord
     */
    public ReservationRecord(Long id, Date availableDate, Date cancelDate, Date collectedDate, Date expiryDate, Date notificationDate, Timestamp reservationDate, String state, Date uncollectedDate, Long biblioId, Long patronId) {
        super(Reservation.RESERVATION);

        set(0, id);
        set(1, availableDate);
        set(2, cancelDate);
        set(3, collectedDate);
        set(4, expiryDate);
        set(5, notificationDate);
        set(6, reservationDate);
        set(7, state);
        set(8, uncollectedDate);
        set(9, biblioId);
        set(10, patronId);
    }
}
