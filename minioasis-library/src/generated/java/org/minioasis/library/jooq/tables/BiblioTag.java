/*
 * This file is generated by jOOQ.
 */
package org.minioasis.library.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.minioasis.library.jooq.DefaultSchema;
import org.minioasis.library.jooq.Indexes;
import org.minioasis.library.jooq.Keys;
import org.minioasis.library.jooq.tables.records.BiblioTagRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BiblioTag extends TableImpl<BiblioTagRecord> {

    private static final long serialVersionUID = -338133968;

    /**
     * The reference instance of <code>BIBLIO_TAG</code>
     */
    public static final BiblioTag BIBLIO_TAG = new BiblioTag();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BiblioTagRecord> getRecordType() {
        return BiblioTagRecord.class;
    }

    /**
     * The column <code>BIBLIO_TAG.BIBLIO_ID</code>.
     */
    public final TableField<BiblioTagRecord, Long> BIBLIO_ID = createField(DSL.name("BIBLIO_ID"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>BIBLIO_TAG.TAG_ID</code>.
     */
    public final TableField<BiblioTagRecord, Long> TAG_ID = createField(DSL.name("TAG_ID"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>BIBLIO_TAG</code> table reference
     */
    public BiblioTag() {
        this(DSL.name("BIBLIO_TAG"), null);
    }

    /**
     * Create an aliased <code>BIBLIO_TAG</code> table reference
     */
    public BiblioTag(String alias) {
        this(DSL.name(alias), BIBLIO_TAG);
    }

    /**
     * Create an aliased <code>BIBLIO_TAG</code> table reference
     */
    public BiblioTag(Name alias) {
        this(alias, BIBLIO_TAG);
    }

    private BiblioTag(Name alias, Table<BiblioTagRecord> aliased) {
        this(alias, aliased, null);
    }

    private BiblioTag(Name alias, Table<BiblioTagRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BiblioTag(Table<O> child, ForeignKey<O, BiblioTagRecord> key) {
        super(child, key, BIBLIO_TAG);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FK2Y040I75GSYULS6MEGB8PEOLK_INDEX_3, Indexes.FK6WR2OUSD2B6D5E9EDOYA9C7OI_INDEX_3, Indexes.PRIMARY_KEY_3);
    }

    @Override
    public UniqueKey<BiblioTagRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_3;
    }

    @Override
    public List<UniqueKey<BiblioTagRecord>> getKeys() {
        return Arrays.<UniqueKey<BiblioTagRecord>>asList(Keys.CONSTRAINT_3);
    }

    @Override
    public List<ForeignKey<BiblioTagRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BiblioTagRecord, ?>>asList(Keys.FK2Y040I75GSYULS6MEGB8PEOLK, Keys.FK6WR2OUSD2B6D5E9EDOYA9C7OI);
    }

    public Biblio biblio() {
        return new Biblio(this, Keys.FK2Y040I75GSYULS6MEGB8PEOLK);
    }

    public Tag tag() {
        return new Tag(this, Keys.FK6WR2OUSD2B6D5E9EDOYA9C7OI);
    }

    @Override
    public BiblioTag as(String alias) {
        return new BiblioTag(DSL.name(alias), this);
    }

    @Override
    public BiblioTag as(Name alias) {
        return new BiblioTag(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BiblioTag rename(String name) {
        return new BiblioTag(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BiblioTag rename(Name name) {
        return new BiblioTag(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
