buildscript {
	ext {
		h2Version = '1.4.197'
		mariaDBVersion = '2.4.3'
		jooqVersion = '3.12.1'
		springBootVersion = '2.1.6.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
	      url 'https://plugins.gradle.org/m2/'
	    }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jooq:jooq:${jooqVersion}")
        classpath("org.jooq:jooq-meta:${jooqVersion}")
		classpath("org.jooq:jooq-codegen:${jooqVersion}")
		classpath("org.jooq:jooq-meta-extensions:${jooqVersion}")
		//classpath("com.h2database:h2:${h2Version}")
		classpath("org.mariadb.jdbc:mariadb-java-client:${mariaDBVersion}")
		classpath "nu.studer:gradle-jooq-plugin:3.0.3"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'nu.studer.jooq'

group = 'org.minioasis'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

sourceSets {
    main {
        java {
        	srcDir 'src/main/java'
            //exclude 'org/minioasis/library/repository/*Impl.java'
       }
   }
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	//implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.data:spring-data-rest-hal-browser'
	implementation 'org.springframework.data:spring-data-envers'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

	//implementation 'org.springframework:spring-oxm:5.1.8.RELEASE'
	implementation 'commons-io:commons-io:2.6'
	implementation 'org.apache.commons:commons-lang3:3.3.2'
	implementation 'org.telegram:telegrambots-spring-boot-starter:4.3.1'
	implementation 'com.github.bufferings:thymeleaf-extras-nl2br:1.0.2'
	implementation 'org.jsoup:jsoup:1.12.1'
	implementation 'joda-time:joda-time:2.10'
	//implementation "mysql:mysql-connector-java"
	implementation 'org.mariadb.jdbc:mariadb-java-client:2.4.3'
	
	implementation 'com.fasterxml.jackson.core:jackson-core:2.9.8'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    implementation 'org.jooq:jooq:${jooqVersion}'
	implementation 'org.jooq:jooq-codegen:${jooqVersion}'
	implementation 'org.jooq:jooq-meta:${jooqVersion}'
	implementation 'org.jooq:jooq-meta-extensions:${jooqVersion}'
	implementation 'io.minio:minio:6.0.8' 
	
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	//runtimeOnly 'com.h2database:h2'
	//runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:${mariaDBVersion}'
	
	//jooqRuntime 'com.h2database:${h2Version}'
	jooqRuntime 'org.mariadb.jdbc:mariadb-java-client:2.4.3'
	jooqRuntime 'org.jooq:jooq:${jooqVersion}'
	jooqRuntime 'org.jooq:jooq-meta:${jooqVersion}'
	jooqRuntime 'org.jooq:jooq-meta-extensions:${jooqVersion}'
	jooqRuntime(files(sourceSets.main.output.classesDirs))
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

jooq {

	version = jooqVersion
	edition = 'OSS'
    
	project(sourceSets.main) {
       //jdbc {
       //    driver = 'org.h2.Driver'
       //    url = 'jdbc:h2:~/testdb'
       //    user = 'sa'
       //    password = ''
       //}
       jdbc {
         //driver = 'com.mysql.jdbc.Driver'
         //url = "jdbc:mysql://localhost:3306/library"
         driver = 'org.mariadb.jdbc.Driver'
         url = 'jdbc:mariadb://localhost:3306/library'
         user = 'root'
         password = '1674584'
       }
       generator {
           name = 'org.jooq.codegen.JavaGenerator'
           strategy {
               name = 'org.jooq.codegen.DefaultGeneratorStrategy'
           }
           database {
           	   //name = "org.jooq.meta.mariadb.MariaDBDatabase"
               name = 'org.jooq.meta.extensions.jpa.JPADatabase'
               //name = "org.jooq.meta.mysql.MySQLDatabase"
               //inputSchema = 'PUBLIC'
               forcedTypes {
				  forcedType {
				    name = 'varchar'
				    expression = '.*'
				    types = 'JSONB?'
				  }
				  forcedType {
				    name = 'varchar'
				    expression = '.*'
				    types = 'INET'
				  }
				}

               properties {
					property {
						key = 'packages'
						value = 'org.minioasis.library.domain'
					}
					property {
						key = 'use-attribute-converters'
						value = 'true'
					}
					property {
						key = 'unqualifiedSchema'
						value = 'none'
					}	
               }
           }
           generate {
           		relations = true
		        deprecated = false
		        records = true
		        immutablePojos = true
		        fluentSetters = true
                records = true
                pojos = true
                //daos = true
           }
           
           target {
               packageName = 'org.minioasis.library.jooq'
               directory = 'src/generated/java'
           }
       }
   }
}

project.tasks.getByName('compileJava').dependsOn -= 'generateProjectJooqSchemaSource'
